#!{{ lookPath "python3" }}

# crossos alias for qemu

import re, os
from platform import architecture, system
from subprocess import run
from sys import argv
from multiprocessing import cpu_count
from psutil import virtual_memory

if len(argv) < 2:
    print("Usage: qe image.ext (qemu additional args)\n\n", "You should pass an image!")
    exit()
elif len(argv) == 2:
    image = argv[1]
    other_params = []
else:
    image = argv[1]
    other_params = argv[2:]

mem = int(virtual_memory()[0] / 1024 / 1024 / 1024 * 0.4)
cpus = int(cpu_count() * 0.4)
mem = 4 if mem > 4 else mem
cpus = 2 if cpus > 2 else cpus
resources = ["-smp", f"{cpus}", "-m", f"{mem}G"]

if image.endswith(".iso"):
    drive = ["-cdrom", image, "-boot", "d"]
else:
    formats = {
        "qcow2": "qcow2",
        "qed": "qed",
        "raw ": "raw ",
        "vdi": "vdi",
        "vhd": "vpc",
        "vmdk": "vmdk",
        "vdi.vtoy": "vdi",
        "vhd.vtoy": "vpc",
    }
    format = [e for k, e in formats.items() if image.endswith(k)][0]
    drive = ["-drive", f"file={image},format={format},index=0,media=disk"]

port_ssh = 9922
port_http = 9980
port_fwd = ["-nic", f"hostfwd=tcp:127.0.0.1:{port_ssh}-0.0.0.0:22,hostfwd=tcp:127.0.0.1:{port_http}-0.0.0.0:80"]
fat_folder = []

archs = {
    "64bit": "x86_64",
    "aarch": "TODO",
}
arch = archs[architecture()[0]]
# TODO detect on mac m1

# TODO detect USB devices if -u arg, list and ask to select

os_family = system().lower()
if os_family == "linux":
    accel = ["-enable-kvm"]
    if os.path.isfile("/usr/share/ovmf/OVMF.fd"):
        bios = ["-bios", "/usr/share/ovmf/OVMF.fd"]
    elif os.path.isfile("/usr/share/ovmf/x64/OVMF.fd"):
        bios = ["-bios", "/usr/share/ovmf/x64/OVMF.fd"]
    elif os.path.isfile("./OVMF.fd"):
        bios = ["-bios", "./OVMF.fd"]
    else:
        bios = []
elif os_family == "windows":
    accel = ["--accel", "whpx"]
    if os.path.isfile("./OVMF.fd"):
        bios = ["-bios", "./OVMF.fd"]
    else:
        bios = []
elif os_family == "darwin":
    raise NotImplementedError
else:
    raise NotImplementedError

command = [f"qemu-system-{arch}"] + accel + resources + bios + fat_folder + drive + port_fwd + other_params

if "-n" in argv:
    print(" ".join([c for c in command if c != "-n"]))
else:
    run(command)

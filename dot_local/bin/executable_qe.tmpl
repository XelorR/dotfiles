#!{{ lookPath "python3" }}

# crossos alias for qemu

import re
from platform import architecture, system
from subprocess import run
from sys import argv

image = argv[1]
other_params = argv[2:]

formats = {
    "qcow2": "qcow2",
    "qed": "qed",
    "raw ": "raw ",
    "vdi": "vdi",
    "vhd ": "vpc ",
    "vmdk": "vmdk",
}
format = formats[image.split(".")[-1]]
# TODO to handle iso

resources = ["-smp", 4, "-m", "4G"]
drive = ["-drive", f"file={image},format={format},index=0,media=disk"]
port_fwd = ["-nic", "hostfwd=tcp:127.0.0.1:9922-0.0.0.0:22,hostfwd=tcp:127.0.0.1:9980-0.0.0.0:80"]
fat_folder = []

archs = {
    "64bit": "x86_64",
}
arch = archs[architecture()[0]]
# TODO detect on mac m1

os_family = system().lower()
if os_family == "linux":
    accel = ["-enable-kvm"]
    bios = ["-bios", "/usr/share/ovmf/OVMF.fd"]
elif os_family == "windows":
    accel = ["--accel", "whpx"]
    bios = []
elif os_family == "darwin":
    raise NotImplementedError
else:
    raise NotImplementedError

command = [f"qemu-system-{arch}"] + accel + resources + bios + fat_folder + drive + port_fwd + other_params

print(command)
run(command)

if status is-interactive
    # PATH ------------------------------
    set PATH ~/.local/bin ~/.cargo/bin/ $PATH

    # PROMPT ------------------------------
    set fish_greeting
    set --global hydro_color_prompt 94e2d5
    set --global hydro_color_error f38ba8
    set --global hydro_color_pwd b4befe
    set --global hydro_color_git f9e2af
    set --global hydro_color_duration 94e2d5
    set --global hydro_multiline true
    functions --copy fish_prompt fish_prompt_origin
    function fish_prompt
        switch (uname -o)
            case Darwin
                set os_icon ï…¹
            case GNU/Linux
                switch (bash -c '. /etc/os-release && echo $ID_LIKE')
                    case arch
                        set os_icon ïŒƒ
                    case '*'
                        set os_icon ï…¼
                end
            case Android
                set os_icon ï…»
        end
        echo -n \n"$os_icon "
        fish_prompt_origin
    end
    # function fish_right_prompt
    #     echo $(hostname)
    # end

    # OS SPECIFIC ------------------------------
    switch (uname -o)
        case Darwin
            # MAC AND HOMEBREW SPECIFIC CONFIG ------------------------------
            alias charm='/Applications/PyCharm\ CE.app/Contents/MacOS/pycharm'
            set PATH /opt/homebrew/bin $PATH
            set HOMEBREW_INSTALL_FROM_API 1
    end

    # EDITOR ------------------------------
    if command -v emacs &>/dev/null
        alias em="emacs -nw -Q --eval '(progn (setq make-backup-files nil) (menu-bar-mode -1))'"
        alias macs="emacsclient -a '' -c -nw"
    end
    if command -v nvim &>/dev/null
        set -gx VISUAL nvim
        alias vi=nvim
    end
    set -gx EDITOR vi
    if command -v fzf &>/dev/null
        alias vf='vi $(fzf)'
    end

    # PYTHON ------------------------------
    alias ve='python3 -m venv ./venv'
    alias va='source ./venv/bin/activate'
    alias vd='deactivate'
    alias www='ifconfig | grep broadcast ; python3 -m http.server'

    # GENERATE PASSWORD ------------------------------
    if command -v openssl &>/dev/null
        alias getpass="openssl rand -base64 20"
    end

    # VIEW RESOURCE USAGE ------------------------------
    alias df='df -kh'
    alias du='du -kh'

    # HANDLING DIRECTORIES ------------------------------
    if command -v gls &>/dev/null
        alias ls='gls'
    end
    function cdl -d "cd into directory and list it's contents"
        cd $argv[1]
        la
    end
    function mkcd -d "Make directory and cd into it"
        mkdir $argv[1]
        cd $argv[1]
    end

    # COPY FILES WITH PROGRESS BAR ------------------------------
    if command -v rsync &>/dev/null
        alias cpv='rsync -ah --info=progress2'
    end
    alias ff='find . -type f -iname'

    # MANAGING DOTFILES ------------------------------
    if command -v chezmoi &>/dev/null
        alias cz='chezmoi'
        alias czu='chezmoi update'
        alias czp='chezmoi apply'
        alias cza='chezmoi add'
        alias czcd='chezmoi cd'
        alias cze='chezmoi edit'
        alias czea='chezmoi edit --apply'
        alias czra='chezmoi re-add'
    end

    # FILE MANAGER ------------------------------
    if command -v lf &>/dev/null
        function lfcd --wraps="lf" --description="lf - Terminal file manager (changing directory on exit)"
            # `command` is needed in case `lfcd` is aliased to `lf`.
            # Quotes will cause `cd` to not change directory if `lf` prints nothing to stdout due to an error.
            cd "$(command lf -print-last-dir $argv)"
        end
        alias lf='lfcd'
    end

end

# CONDA ------------------------------
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
if test -f $HOME/.anaconda3/bin/conda
    eval $HOME/.anaconda3/bin/conda "shell.fish" hook $argv | source
    if test -f "$HOME/.anaconda3/etc/fish/conf.d/mamba.fish"
        source "$HOME/.anaconda3/etc/fish/conf.d/mamba.fish"
    end
    # kill the right prompt __conda_add_prompt ðŸ˜ 
    function __conda_add_prompt
    end
    conda config --set auto_activate_base false
end

# <<< conda initialize <<<
